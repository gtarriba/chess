knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(reticulate)
df <- read.csv("games.csv")
# Load the dataset and look at its structure
df <- read.csv("games.csv")
# Load the dataset and look at its structure
df <- read.csv("games.csv")
str(df)
head(df)
str(df)
colnames(df)
nrow(df)
lapply(z, function(x) sum(is.na(x)))
lapply(df, function(x) sum(is.na(x)))
df %>%
filter(victory_status != "draw") %>%
table(victory_status)
table(df$victory_status)
table(df$winner)
table(df$winner)/nrow(df)
table(df$winner)/nrow(df)*100
table(df$winner)/nrow(df)*100[1]
summary <- table(df$winner)/nrow(df)*100
class(summary)
perc_win <- table(df$winner)/nrow(df)*100
class(perc_win)
colnames(perc_win)
nrow(perc_win)
perc_win[1]
perc_win[3] - perc_win[1]
perc_win <- table(df$winner)/nrow(df)*100
perc_win[3] - perc_win[1]
perc_win <- table(df$winner)/nrow(df)*100
print(perc_win)
perc_win[3] - perc_win[1]
# Percentage point difference in prob. of white win
perc_win[3] - perc_win[1]/perc_win[3]
# Percentage point difference in prob. of white win
(perc_win[3] - perc_win[1])/perc_win[3]
# Same analysis but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df)*100
perc_win <- table(df$winner)/nrow(df)*100
print(perc_win)
# Percentage point difference in prob. of white win
perc_win[3] - perc_win[1]
# How much likelier is a white win?
(perc_win[3] - perc_win[1])/perc_win[3]
# Same analysis but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df)*100
# Same analysis as in previous cell, but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df)*100
perc_win2
# Same analysis as in previous cell, but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df[,df$winner != "draw"])*100
# Same analysis as in previous cell, but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df[df$winner != "draw"])*100
# Same analysis as in previous cell, but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df[df$winner != "draw",])*100
perc_win2
# Same analysis as in previous cell, but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df[df$winner != "draw",])*100
print(perc_win2)
# Percentage point difference in prob. of white win
perc_win2[3] - perc_win2[1]
# How much likelier is a white win?
(perc_win2[3] - perc_win2[1])/perc_win2[3]
# Same analysis as in previous cell, but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df[df$winner != "draw",])*100
print(perc_win2)
# Percentage point difference in prob. of white win
perc_win2[3] - perc_win2[1]
# How much likelier is a white win?
(perc_win2[3] - perc_win2[1])/perc_win2[3]
# Same analysis as in previous cell, but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df[df$winner != "draw",])*100
print(perc_win2)
# Percentage point difference in prob. of white win
perc_win2[3] - perc_win2[1]
# How much likelier is a white win?
(perc_win2[3] - perc_win2[1])/perc_win2[3]
perc_win <- table(df$winner)/nrow(df)*100
print(perc_win)
# Percentage point difference in prob. of white win
perc_win[3] - perc_win[1]
# How much likelier is a white win?
(perc_win[3] - perc_win[1])/perc_win[3]
# Same analysis as in previous cell, but removing draws
perc_win2 <- table(df$winner[df$winner != "draw"])/nrow(df[df$winner != "draw",])*100
print(perc_win2)
# Percentage point difference in prob. of white win
perc_win2[3] - perc_win2[1]
# How much likelier is a white win?
(perc_win2[3] - perc_win2[1])/perc_win2[3]
df$diff <- with(df, sqrt((white_rating - black_rating)^2))
hist(df$diff)
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Histogram of rating differences
hist(df$diff)
# Histogram of game length
hist(df$turns)
# Histogram of rating differences
hist(df$diff, bins=50)
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Histogram of rating differences
hist(df$diff, bin=50)
# Histogram of game length
hist(df$turns)
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Histogram of rating differences
hist(df$diff, breaks=50)
# Histogram of game length
hist(df$turns)
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Histogram of rating differences
hist(df$diff, breaks=50)
# Histogram of game length
hist(df$turns, breaks=50)
# Summary stats for the two variables of interest
summary(df$diff)
summary(df$turns)
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Summary stats for the two variables of interest
summary(df$diff)
summary(df$turns)
# Histogram of rating differences
hist(df$diff, breaks=50)
# Histogram of game length
hist(df$turns, breaks=50)
# Scatterplot of rating difference and turns
ggplot(df, aes(x=diff, y=turns)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(reticulate)
library(ggplot2)
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Summary stats for the two variables of interest
summary(df$diff)
summary(df$turns)
# Histogram of rating differences
hist(df$diff, breaks=50)
# Histogram of game length
hist(df$turns, breaks=50)
# Scatterplot of rating difference and turns
ggplot(df, aes(x=diff, y=turns)) + geom_point()
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Summary stats for the two variables of interest
summary(df$diff)
summary(df$turns)
# Histogram of rating differences
hist(df$diff, breaks=50)
# Histogram of game length
hist(df$turns, breaks=50)
# Scatterplot of rating difference and turns
ggplot(df, aes(x=diff, y=turns)) + geom_point(alpha=0.3) # It's hard to tell because most ga
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Summary stats for the two variables of interest
summary(df$diff)
summary(df$turns)
# Histogram of rating differences
hist(df$diff, breaks=50)
# Histogram of game length
hist(df$turns, breaks=50)
# Scatterplot of rating difference and turns
ggplot(df, aes(x=diff, y=turns)) + geom_point(alpha=0.3) # There seems to be a negative relationship but it's hard to tell because of overplotting. Let's look at games betweens strong rivals first
# We create the var strength which is the sum of the ratings of both players. Then we repeat the scatterplot but this time only for games where the sum of the players > 4000 (i.e. where players had an average strength of 2000)
df$strength <- white_rating + black_rating
#
df$strength <- with(df, white_rating + black_rating)
ggplot(df[df$strenght > 4000], aes(x=diff, y=turns)) + geom_point(alpha=0.3)
#
df$strength <- with(df, white_rating + black_rating)
ggplot(df[df$strength > 4000,], aes(x=diff, y=turns)) + geom_point(alpha=0.3)
df$strength <- with(df, white_rating + black_rating)
ggplot(df[df$strength > 4000,], aes(x=diff, y=turns)) + geom_point(alpha=0.3) + geom_line(method="smooth")
df$strength <- with(df, white_rating + black_rating)
ggplot(df[df$strength > 4000,], aes(x=diff, y=turns)) + geom_point(alpha=0.3) + geom_line(method="lm")
df$strength <- with(df, white_rating + black_rating)
ggplot(df[df$strength > 4000,], aes(x=diff, y=turns)) + geom_point(alpha=0.3) + geom_smooth(method="lm")
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Summary stats for the two variables of interest
summary(df$diff)
summary(df$turns)
# Histogram of rating differences
hist(df$diff, breaks=50)
# Histogram of game length
hist(df$turns, breaks=50)
# Scatterplot of rating difference and turns
ggplot(df, aes(x=diff, y=turns)) + geom_point(alpha=0.3) #
df$strength <- with(df, white_rating + black_rating)
ggplot(df[df$strength > 4000,], aes(x=diff, y=turns)) + geom_point(alpha=0.3) + geom_smooth(method="lm")
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
ggplot(df, aes(x=diffc, y=turns)) + geom_bar()
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
ggplot(df, aes(x=diffc, y=turns)) + geom_col()
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col()
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col() + geom_text(aes(label=Number), position=position_dodge(width=0.9), vjust=-0.25)
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col() + geom_text(aes(label=avg_turn), position=position_dodge(width=0.9), vjust=-0.25)
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
round(avg_turn, digits=1) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col() + geom_text(aes(label=avg_turn), position=position_dodge(width=0.9), vjust=-0.25)
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col() + geom_text(aes(label=avg_turn), position=position_dodge(width=0.9), vjust=-0.25)
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col() + geom_text(aes(label=round(avg_turn, digits=1), position=position_dodge(width=0.9), vjust=-0.25)
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col() + geom_text(aes(label=round(avg_turn, digits=1)), position=position_dodge(width=0.9), vjust=-0.25)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(reticulate)
library(ggplot2)
# Create categorical variable of rating difference as diffc
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
# Create categorical variable of rating difference as diffc
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(reticulate)
library(ggplot2)
# Load the dataset and name it df
df <- read.csv("games.csv")
nrow(df)
str(df)
lapply(df, function(x) sum(is.na(x)))
perc_win <- table(df$winner)/nrow(df)*100
print(perc_win)
# Percentage point difference in prob. of white win
perc_win[3] - perc_win[1]
# How much likelier is a white win?
(perc_win[3] - perc_win[1])/perc_win[3]
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Summary stats for the two variables of interest
summary(df$diff)
summary(df$turns)
# Histogram of rating differences
hist(df$diff, breaks=50)
# Histogram of game length
hist(df$turns, breaks=50)
# Scatterplot of rating difference and turns
ggplot(df, aes(x=diff, y=turns)) + geom_point(alpha=0.3) #
df$strength <- with(df, white_rating + black_rating)
ggplot(df[df$strength > 4000,], aes(x=diff, y=turns)) + geom_point(alpha=0.3) + geom_smooth(method="lm")
# Create categorical variable of rating difference as diffc
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
# Group by diffc and estimate mean turns for each category of diffc, then plot
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col() + geom_text(aes(label=round(avg_turn, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) + xlab("Average turns")
# Create categorical variable of rating difference as diffc
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
# Group by diffc and estimate mean turns for each category of diffc, then plot
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col() + geom_text(aes(label=round(avg_turn, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) + xlab("Average turns")
# Create categorical variable of rating difference as diffc
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
# Group by diffc and estimate mean turns for each category of diffc, then plot
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col() + geom_text(aes(label=round(avg_turn, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) + xlab("Absolute rating difference between players") + ylab("Average number of turns")
# Create categorical variable of rating difference as diffc
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
# Group by diffc and estimate mean turns for each category of diffc, then plot
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col(fill="steelblue") + geom_text(aes(label=round(avg_turn, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) + xlab("Absolute rating difference between players") + ylab("Average number of turns")
nrow(df)
str(df)
sum(is.na(df))
perc_win <- table(df$winner)/nrow(df)*100
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(reticulate)
library(ggplot2)
nrow(df)
str(df)
lapply(df, function(x) sum(is.na(x)))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(reticulate)
library(ggplot2)
# Load the dataset and name it df
df <- read.csv("games.csv")
nrow(df)
str(df)
lapply(df, function(x) sum(is.na(x)))
nrow(df)
str(df)
lapply(df, function(x) sum(is.na(x)))
perc_win <- table(df$winner)/nrow(df)*100
print(perc_win)
# Percentage point difference in prob. of white win
perc_win[3] - perc_win[1]
# How much likelier is a white win?
(perc_win[3] - perc_win[1])/perc_win[3]
# Variable of rating differences
df$diff <- with(df, abs(white_rating - black_rating))
# Summary stats for the two variables of interest
summary(df$diff)
summary(df$turns)
# Histogram of rating differences
hist(df$diff, breaks=50)
# Histogram of game length
hist(df$turns, breaks=50)
# Scatterplot of rating difference and turns
ggplot(df, aes(x=diff, y=turns)) + geom_point(alpha=0.3) #
df$strength <- with(df, white_rating + black_rating)
ggplot(df[df$strength > 4000,], aes(x=diff, y=turns)) + geom_point(alpha=0.3) + geom_smooth(method="lm")
df$strength <- with(df, white_rating + black_rating)
ggplot(df[df$strength > 4000,], aes(x=diff, y=turns)) + geom_point(alpha=0.3) + geom_smooth(method="lm")
# Create categorical variable of rating difference as diffc
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
# Group by diffc and estimate mean turns for each category of diffc, then plot
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col(fill="steelblue") + geom_text(aes(label=round(avg_turn, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) + xlab("Absolute rating difference between players") + ylab("Average number of turns")
# Create categorical variable of rating difference as diffc
df$diffc <- cut(df$diff,
breaks=c(-Inf, 400, 800, Inf),
labels=c("Less than 400","400 to 800","Over 800"))
# Group by diffc and estimate mean turns for each category of diffc, then plot
df %>%
group_by(diffc) %>%
summarize(avg_turn = mean(turns)) %>%
ggplot(aes(x=diffc, y=avg_turn)) + geom_col(fill="steelblue") + geom_text(aes(label=round(avg_turn, digits=1)), position=position_dodge(width=0.9), vjust=-0.25) + xlab("Absolute rating difference between players") + ylab("Average number of turns")
table(df$winner)
df$outcome <- if
table(df$winner)
df$outcome <- as.numeric(ifelse(df$winner=="white", 1,
ifelse(df$winner=="draw", 0,
ifelse(df$winner=="black", -1))))
table(df$winner)
df$outcome <- as.numeric(ifelse(df$winner=="white", 1,
ifelse(df$winner=="draw", 0,
ifelse(df$winner=="black", -1, NA))))
mean(df$outcome)
mean(df$diff)
hist(df$diff)
df$abs_diff <- with(df, white_rating - black_rating)
df$abs_diff <- with(df, white_rating - black_rating)
hist(df$abs_diff)
hist(df$abs_diff, breaks=50)
df$abs_diff <- with(df, white_rating - black_rating)
hist(df$abs_diff, breaks=50)
df$abs_diffc <- with(df,
cut(abs_diff,
breaks = c(-Inf, -1500, -1000, -500, 0, 500, 1000, 1500, Inf),
right  = FALSE))
table(df$abs_diffc)
df$abs_diff <- with(df, white_rating - black_rating)
hist(df$abs_diff, breaks=50)
df$abs_diffc <- with(df,
cut(abs_diff,
breaks = c(-Inf, -500, -400, -300, -200, -100, 0, 100, 200, 300, 400, 500, Inf),
right  = FALSE))
table(df$abs_diffc)
df %>%
group_by(abs_diffc) %>%
sumarize(mean_score = mean(outcome)) %>%
ggplot(aes(x=abs_diffc, y=mean_score)) + geom_col()
df %>%
group_by(abs_diffc) %>%
summarize(mean_score = mean(outcome)) %>%
ggplot(aes(x=abs_diffc, y=mean_score)) + geom_col()
df %>%
group_by(abs_diffc) %>%
summarize(mean_score = mean(outcome)) %>%
ggplot(aes(x=abs_diffc, y=mean_score)) + geom_col()
mean(df$outcome[df$abs_diffc > 0 & df$abs_diffc < 100 ])
mean(df$outcome[df$abs_diffc > 0 & df$abs_diffc < 100, ])
mean(df$outcome[df$abs_diff > 0 & df$abs_diff < 100])
# Avg score when rating difference is 0 to 100 (slight advantage for white)
mean(df$outcome[df$abs_diff > 0 & df$abs_diff < 100])
# Avg score when rating difference is -100 to 0 (slight advantage for black)
mean(df$outcome[df$abs_diff <100 & df$abs_diff < 0])
# Avg score when rating difference is 0 to 100 (slight advantage for white)
mean(df$outcome[df$abs_diff > 0 & df$abs_diff <= 100])
# Avg score when rating difference is -100 to 0 (slight advantage for black)
mean(df$outcome[df$abs_diff <=100 & df$abs_diff < 0])
# Avg score when rating difference is 0 to 100 (slight advantage for white)
mean(df$outcome[df$abs_diff >= 0 & df$abs_diff <= 100])
# Avg score when rating difference is -100 to 0 (slight advantage for black)
mean(df$outcome[df$abs_diff <=100 & df$abs_diff <= 0])
# Avg score when rating difference is 0 to 100 (slight advantage for white)
mean(df$outcome[df$abs_diff > 0 & df$abs_diff <= 100])
# Avg score when rating difference is -100 to 0 (slight advantage for black)
mean(df$outcome[df$abs_diff <=100 & df$abs_diff < 0])
table(df$victory_status)
